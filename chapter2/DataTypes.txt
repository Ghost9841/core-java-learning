// 2.3 Data Types

# Data Types

There are eight primitive types in Java.
Four of them are integer types;
Two are floating-point number types; 
One is the character type char,
used for code units in Unicode encoding scheme

# Integer types

Type     Storage Requirement    Range
int         4 bytes             -2,147,483,648 to 2,147,483,647 (just over 2 billion)
short       2 bytes             -32,768 to 32,767
long        8 bytes             -9,233,372,036,854,775,808 to 9,223,372,036,854,775,807
byte        1 byte              -128 to 127

# Floating-Point Types

Type     Storage Requirement    Range
float       4 bytes             Approximately +- 3.40282347E + 38F
double      8 bytes             Approximately +- 1.79769313486231570E + 308

There are three special floating-point values to denote overflows and errors:
    Positive Infinty
    Negative Infinity
    NaN (not a number)

if (x === Double.NaN) // is never true
if (Double.isNaN(x)) // check whether x is "not a number"

# The Char Type

Escape Sequence     Name             Unicode values
\b                  Backspace           \u0008
\t                  Tab                 \u0009
\n                  Linefeed            \u000a
\r                  Carriage return     \u000d
\"                  Double Quote        \u0022
\'                  Single Quote        \u0027
\\                  Backslash           \u005c

# (Unicode aand the char type it was designed to overcome the limitations of traditional character)
In Java, the char type describes a code unit in the UTF-16 encoding.


# The Boolean Type

The boolean type has two values, false and true. It is used for evaluating logical conditions.
You cannot conver between integers and boolean values.

if (x = 0) // oops meant ... x == 0

In Java, the test does not compile because the integer expression x = 0 cannot be converted to a boolean value.


// >> Now go to Variables.txt
